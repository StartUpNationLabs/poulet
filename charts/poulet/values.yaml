grafana:
  enabled: true
  replicas: 1
  resources:
    requests:
      memory: "100Mi"
      cpu: "200m"
    limits:
      memory: "400Mi"
      cpu: "400m"
  initChownData:
    resources:
      requests:
        memory: "100Mi"
        cpu: "200m"
      limits:
        memory: "400Mi"
        cpu: "400m"

  datasources:
    datasources.yaml:
      apiVersion: 1
      datasources:
        - name: Prometheus
          type: prometheus
          url: http://poulet-prometheus-server
          uid: prometheus
          access: proxy
          jsonData:
            httpMethod: POST
            manageAlerts: true
            prometheusType: Prometheus
            prometheusVersion: 2.44.0
            cacheLevel: 'High'
            disableRecordingRules: false
            incrementalQueryOverlapWindow: 10m
  dashboardProviders:
    dashboardproviders.yaml:
      apiVersion: 1
      providers:
        - name: 'default'
          orgId: 1
          folder: ''
          type: file
          disableDeletion: false
          editable: true
          options:
            path: /var/lib/grafana/dashboards/default

  dashboards:
    default:
      doctor-dashboard:
        url: https://raw.githubusercontent.com/StartUpNationLabs/poulet/refs/heads/main/cloud/config/grafana/dashboards_data/doctor.json
        token: ''
  downloadDashboards:
    resources:
      requests:
        memory: "100Mi"
        cpu: "200m"
      limits:
        memory: "400Mi"
        cpu: "400m"
  sidecar:
    resources:
      limits:
        cpu: 100m
        memory: 100Mi
      requests:
        cpu: 50m
        memory: 50Mi
  imageRenderer:
    resources:
      limits:
        cpu: 100m
        memory: 100Mi
      requests:
        cpu: 50m
        memory: 50Mi

  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: traefik
      cert-manager.io/cluster-issuer: letsencrypt-prod
    hosts:
      - grafana.al.apoorva64.com
    tls:
      - secretName: grafana-tls
        hosts:
          - grafana.al.apoorva64.com
    path: /
    pathType: Prefix


# This is to override the chart name.
nameOverride: ""
fullnameOverride: ""
prometheus:
  enabled: true
  global:
    scrape_interval: 5s
    evaluation_interval: 5s
  ingress:
    enabled: false
    className: ""
    annotations: { }
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
    hosts:
      - host: prometheus.al.apoorva64.com
        paths:
          - path: /
            pathType: ImplementationSpecific
    tls: [ ]
  alertmanager:
    enabled: true
    config:
      route:
        receiver: 'webhook_receiver'
      receivers:
        - name: 'webhook_receiver'
          webhook_configs:
            - url: 'http://poulet-alert-management:8080/alert/receiveAlert'

    resources:
      requests:
        memory: "100Mi"
        cpu: "200m"
      limits:
        memory: "400Mi"
        cpu: "400m"
  kube-state-metrics:
    resources:
      requests:
        memory: "100Mi"
        cpu: "200m"
      limits:
        memory: "400Mi"
        cpu: "400m"
  prometheus-node-exporter:
    resources:
      requests:
        memory: "100Mi"
        cpu: "200m"
      limits:
        memory: "400Mi"
        cpu: "400m"
  prometheus-pushgateway:
    enabled: false
    resources:
      requests:
        memory: "100Mi"
        cpu: "200m"
      limits:
        memory: "400Mi"
        cpu: "400m"
  server:
    resources:
      requests:
        memory: "100Mi"
        cpu: "200m"
      limits:
        memory: "400Mi"
        cpu: "400m"
    persistentVolume:
      size: 2Gi

    retentionSize: "20GB"
    statefulSet:
      enabled: true
    replicaCount: 1

    extraArgs:
      enable-feature: remote-write-receiver
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local


  configmapReload:
    prometheus:
      resources:
        requests:
          memory: "100Mi"
          cpu: "200m"
        limits:
          memory: "400Mi"
          cpu: "400m"


  serverFiles:
    alerting_rules.yml:
      groups:
        - name: glucose-deriv-alerts
          rules:
            - alert: RapidIncreaseGlucose
              expr: deriv(glucose[30s]) > 10
              for: 15s
              labels:
                severity: "MEDIUM"
                type: "glucose_deriv"
                gatewayId: "671aaecbbf1f103b28e58788"
                value: "{{ $value }}"

              annotations:
                summary: "Rapid Increase in Glucose Alert"
                description: "The glucose level is increasing rapidly (rate of change > 10 mg/dL per 5 minutes)."
                message: "Current rate of glucose change: {{ $value }} mg/dL per 5 minutes"

            - alert: RapidDecreaseGlucose
              expr: deriv(glucose[30s]) < -10
              for: 15s
              labels:
                severity: "MEDIUM"
                type: "glucose_deriv"
                gatewayId: "671aaecbbf1f103b28e58788"
                value: "{{ $value }}"

              annotations:
                summary: "Rapid Decrease in Glucose Alert"
                description: "The glucose level is decreasing rapidly (rate of change < -10 mg/dL per 5 minutes)."
                message: "Current rate of glucose change: {{ $value }} mg/dL per 5 minutes"

        - name: heartrate-deriv-alerts
          rules:
            - alert: RapidIncreaseHeartRate
              expr: deriv(heartrate[30s]) > 15
              for: 15s
              labels:
                severity: "MEDIUM"
                type: "heartrate_deriv"
                gatewayId: "671aaecbbf1f103b28e58788"
                value: "{{ $value }}"

              annotations:
                summary: "Rapid Increase in Heart Rate Alert"
                description: "The heart rate is increasing rapidly (rate of change > 15 bpm per 5 minutes)."
                message: "Current rate of heart rate change: {{ $value }} bpm per 5 minutes"

            - alert: RapidDecreaseHeartRate
              expr: deriv(heartrate[30s]) < -15
              for: 15s
              labels:
                severity: "HIGH"
                type: "heartrate_deriv"
                gatewayId: "671aaecbbf1f103b28e58788"
                value: "{{ $value }}"

              annotations:
                summary: "Rapid Decrease in Heart Rate Alert"
                description: "The heart rate is decreasing rapidly (rate of change < -15 bpm per 5 minutes)."
                message: "Current rate of heart rate change: {{ $value }} bpm per 5 minutes"

        - name: temperature-deriv-alerts
          rules:
            - alert: RapidIncreaseTemperature
              expr: deriv(temperature[30s]) > 0.5
              for: 15s
              labels:
                severity: "MEDIUM"
                type: "temperature_deriv"
                gatewayId: "671aaecbbf1f103b28e58788"
                value: "{{ $value }}"

              annotations:
                summary: "Rapid Increase in Temperature Alert"
                description: "The temperature is increasing rapidly (rate of change > 0.5째C per 5 minutes)."
                message: "Current rate of temperature change: {{ $value }}째C per 5 minutes"

            - alert: RapidDecreaseTemperature
              expr: deriv(temperature[30s]) < -0.5
              for: 15s
              labels:
                severity: "MEDIUM"
                type: "temperature_deriv"
                gatewayId: "671aaecbbf1f103b28e58788"
                value: "{{ $value }}"

              annotations:
                summary: "Rapid Decrease in Temperature Alert"
                description: "The temperature is decreasing rapidly (rate of change < -0.5째C per 5 minutes)."
                message: "Current rate of temperature change: {{ $value }}째C per 5 minutes"

        - name: glucose-predict-alerts
          rules:
            - alert: PredictedHighGlucose
              expr: predict_linear(glucose[30m], 30 * 60) > 180
              for: 1m
              labels:
                severity: "WARNING"
                type: "glucose_predict"
                gatewayId: "671aaecbbf1f103b28e58788"
                value: "{{ $value }}"

              annotations:
                summary: "Predicted High Glucose Alert"
                description: "Glucose level is predicted to exceed 180 mg/dL within the next 30 minutes."
                message: "Predicted glucose value in 30 minutes: {{ $value }} mg/dL"

            - alert: PredictedLowGlucose
              expr: predict_linear(glucose[30m], 30 * 60) < 70
              for: 1m
              labels:
                severity: "WARNING"
                type: "glucose_predict"
                gatewayId: "671aaecbbf1f103b28e58788"
                value: "{{ $value }}"

              annotations:
                summary: "Predicted Low Glucose Alert"
                description: "Glucose level is predicted to fall below 70 mg/dL within the next 30 minutes."
                message: "Predicted glucose value in 30 minutes: {{ $value }} mg/dL"

        - name: heartrate-predict-alerts
          rules:
            - alert: PredictedHighHeartRate
              expr: predict_linear(heartrate[5m], 10 * 60) > 100
              for: 1m
              labels:
                severity: "WARNING"
                type: "heartrate_predict"
                gatewayId: "671aaecbbf1f103b28e58788"
                value: "{{ $value }}"

              annotations:
                summary: "Predicted High Heart Rate Alert"
                description: "The heart rate is predicted to exceed 100 bpm within the next 10 minutes."
                message: "Predicted heart rate value in 10 minutes: {{ $value }} bpm"

            - alert: PredictedLowHeartRate
              expr: predict_linear(heartrate[5m], 10 * 60) < 50
              for: 1m
              labels:
                severity: "WARNING"
                type: "heartrate_predict"
                gatewayId: "671aaecbbf1f103b28e58788"
                value: "{{ $value }}"

              annotations:
                summary: "Predicted Low Heart Rate Alert"
                description: "The heart rate is predicted to drop below 50 bpm within the next 10 minutes."
                message: "Predicted heart rate value in 10 minutes: {{ $value }} bpm"

        - name: temperature-predict-alerts
          rules:
            - alert: PredictedHighTemperature
              expr: predict_linear(temperature[5m], 10 * 60) > 40
              for: 1m
              labels:
                severity: "WARNING"
                type: "temperature_predict"
                gatewayId: "671aaecbbf1f103b28e58788"
                value: "{{ $value }}"

              annotations:
                summary: "Predicted High Temperature Alert"
                description: "The temperature is predicted to exceed 40째C within the next 10 minutes."
                message: "Predicted temperature value in 10 minutes: {{ $value }}째C"

            - alert: PredictedLowTemperature
              expr: predict_linear(temperature[5m], 10 * 60) < 35
              for: 1m
              labels:
                severity: "WARNING"
                type: "temperature_predict"
                gatewayId: "671aaecbbf1f103b28e58788"
                value: "{{ $value }}"

              annotations:
                summary: "Predicted Low Temperature Alert"
                description: "The temperature is predicted to drop below 35째C within the next 10 minutes."
                message: "Predicted temperature value in 10 minutes: {{ $value }}째C"




keycloak:
  enabled: true
  ingress:
    enabled: true
    className: ""
    annotations: { }
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
    hostname: keycloak.al.local
    tls: [ ]
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

mongodb:
  enabled: true
  auth:
    enabled: true
    rootPassword: root

alert-management:
  enabled: true
  mongodb:
    dbName: patient
  keycloak:
    clientId: backend-service
    clientSecret: J1jZPePtgzG4Q9ltZTHlBGKEyj93P4hd
  ingress:
    enabled: false
    className: ""
    annotations: { }
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
    hosts:
      - host: alert-management.al.apoorva64.com
        paths:
          - path: /
            pathType: ImplementationSpecific
    tls: [ ]

patient-management:
  enabled: true
  image:
    tag: 90a349d0655d259b9ea2e40f55dea53f9694aba9
  mongodb:
    dbName: patient
  keycloak:
    clientId: backend-service
    clientSecret: J1jZPePtgzG4Q9ltZTHlBGKEyj93P4hd
  ingress:
    enabled: false
    className: ""
    annotations: { }
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
    hosts:
      - host: patient-management.al.apoorva64.com
        paths:
          - path: /
            pathType: ImplementationSpecific
    tls: [ ]
analyse-haut-niveau-management:
  enabled: true
  image:
    tag: ad926e374383c474e66304cb6ed3a301968831cd

frontend:
  enabled: true
  image:
    tag: 53596be130d71da9921d03a2ab3c25af334e99f3
  environment:
    ALERT_MANAGEMENT_BASE_URL: "http://doctor.al.apoorva64.com"
    PATIENT_MANAGEMENT_BASE_URL: "http://doctor.al.apoorva64.com"
    ANALYSE_HAUT_NIVEAU_MANAGEMENT_BASE_URL: "http://doctor.al.apoorva64.com"
    DASHBOARD_BASE_URL: "https://grafana.al.apoorva64.com/d/ee114zd3cfeo0c/doctor"
  ingress:
    enabled: true
    className: ""
    annotations: { }
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
    hosts:
      - host: doctor.al.apoorva64.com
        paths:
          - path: /api/patient
            pathType: Prefix
            backend:
              service:
                name: poulet-patient-management
                port:
                  number: 8080
          - path: /alert
            pathType: Prefix
            backend:
              service:
                name: poulet-alert-management
                port:
                  number: 8080
          - path: /metrics
            pathType: Prefix
            backend:
              service:
                name: poulet-analyse-haut-niveau-management
                port:
                  number: 8080
          - path: /
            pathType: ImplementationSpecific
            backend:
              service:
                name: poulet-frontend
                port:
                  number: 80
    tls: [ ]
  resources:
    limits:
      cpu: 100m
      memory: 128Mi
    requests:
      cpu: 100m
      memory: 128Mi

#GATEWAY

rabbitmq:
  enabled: true
  auth:
    password: password
  resources:
    requests:
      memory: "200Mi"
      cpu: "100m"
    limits:
      memory: "512Mi"
      cpu: "100m"

adapter:
  nabled: true
  image:
    tag: 2d5bc3a78d77d74b3db138f2c5ce1ac8258680e5
  resources:
    limits:
      cpu: 100m
      memory: 128Mi
    requests:
      cpu: 100m
      memory: 128Mi
  ingress:
    enabled: true
    className: ""
    annotations: { }
    hosts:
      - host: adapter.al.apoorva64.com
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: poulet-adapter
                port:
                  number: 80

data-manager:
  enabled: true
  image:
    tag: 8ed56141b3346e97532a83e4d323ba9f9cbc51e5
  resources:
    limits:
      cpu: 100m
      memory: 128Mi
    requests:
      cpu: 100m
      memory: 128Mi

