grafana:
  enabled: true
  replicas: 1
  resources:
    requests:
      memory: "100Mi"
      cpu: "200m"
    limits:
      memory: "400Mi"
      cpu: "400m"
  initChownData:
    resources:
      requests:
        memory: "100Mi"
        cpu: "200m"
      limits:
        memory: "400Mi"
        cpu: "400m"

  datasources:
    datasources.yaml:
      apiVersion: 1
      datasources:
        - name: Prometheus
          type: prometheus
          url: http://poulet-prometheus-server
          uid: prometheus
          access: proxy
          jsonData:
            httpMethod: POST
            manageAlerts: true
            prometheusType: Prometheus
            prometheusVersion: 2.44.0
            cacheLevel: 'High'
            disableRecordingRules: false
            incrementalQueryOverlapWindow: 10m
  sidecar:
    resources:
      limits:
        cpu: 100m
        memory: 100Mi
      requests:
        cpu: 50m
        memory: 50Mi
  imageRenderer:
    resources:
      limits:
        cpu: 100m
        memory: 100Mi
      requests:
        cpu: 50m
        memory: 50Mi

  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: traefik
      cert-manager.io/cluster-issuer: letsencrypt-prod
    hosts:
      - grafana.al.apoorva64.com
    tls:
      - secretName: grafana-tls
        hosts:
          - grafana.al.apoorva64.com
    path: /
    pathType: Prefix


# This is to override the chart name.
nameOverride: ""
fullnameOverride: ""
prometheus:
  enabled: true
  
  ingress:
    enabled: false
    className: ""
    annotations: { }
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
    hosts:
      - host: prometheus.al.apoorva64.com
        paths:
          - path: /
            pathType: ImplementationSpecific
    tls: [ ]
  alertmanager:
    resources:
      requests:
        memory: "100Mi"
        cpu: "200m"
      limits:
        memory: "400Mi"
        cpu: "400m"
  kube-state-metrics:
    resources:
      requests:
        memory: "100Mi"
        cpu: "200m"
      limits:
        memory: "400Mi"
        cpu: "400m"
  prometheus-node-exporter:
    resources:
      requests:
        memory: "100Mi"
        cpu: "200m"
      limits:
        memory: "400Mi"
        cpu: "400m"
  prometheus-pushgateway:
    enabled: false
    resources:
      requests:
        memory: "100Mi"
        cpu: "200m"
      limits:
        memory: "400Mi"
        cpu: "400m"
  server:
    resources:
      requests:
        memory: "100Mi"
        cpu: "200m"
      limits:
        memory: "400Mi"
        cpu: "400m"
    persistentVolume:
      size: 2Gi

    retentionSize: "20GB"

    extraArgs:
      enable-feature: remote-write-receiver
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local


  configmapReload:
    prometheus:
      resources:
        requests:
          memory: "100Mi"
          cpu: "200m"
        limits:
          memory: "400Mi"
          cpu: "400m"


  serverFiles:
    prometheus.yml:
      scrape_configs: []


keycloak:
  enabled: true
  ingress:
    enabled: true
    className: ""
    annotations: { }
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
    hostname: keycloak.al.local
    tls: [ ]
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

mongodb:
  enabled: true
  auth:
    enabled: true
    rootPassword: root
alert-management:
  enabled: true
  mongodb:
    dbName: patient
  keycloak:
    clientId: backend-service
    clientSecret: J1jZPePtgzG4Q9ltZTHlBGKEyj93P4hd
  ingress:
    enabled: false
    className: ""
    annotations: { }
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
    hosts:
      - host: alert-management.al.apoorva64.com
        paths:
          - path: /
            pathType: ImplementationSpecific
    tls: [ ]

patient-management:
  enabled: true
  mongodb:
    dbName: patient
  keycloak:
    clientId: backend-service
    clientSecret: J1jZPePtgzG4Q9ltZTHlBGKEyj93P4hd
  ingress:
    enabled: false
    className: ""
    annotations: { }
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
    hosts:
      - host: patient-management.al.apoorva64.com
        paths:
          - path: /
            pathType: ImplementationSpecific
    tls: [ ]
analyse-haut-niveau-management:
  enabled: true
  image:
    tag: "12f04e9fe10440f6e3d2a26b017d4fc11839447d"

frontend:
  enabled: true
  image:
    tag: 12f04e9fe10440f6e3d2a26b017d4fc11839447d
  environment:
    ALERT_MANAGEMENT_BASE_URL: "http://doctor.al.apoorva64.com"
    PATIENT_MANAGEMENT_BASE_URL: "http://doctor.al.apoorva64.com"
    ANALYSE_HAUT_NIVEAU_MANAGEMENT_BASE_URL: "http://doctor.al.apoorva64.com"
  ingress:
    enabled: true
    className: ""
    annotations: { }
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
    hosts:
      - host: doctor.al.apoorva64.com
        paths:
          - path: /patient
            pathType: Prefix
            backend:
              service:
                name: poulet-patient-management
                port:
                  number: 8080
          - path: /alert
            pathType: Prefix
            backend:
              service:
                name: poulet-alert-management
                port:
                  number: 8080
          - path: /metrics
            pathType: Prefix
            backend:
              service:
                name: poulet-analyse-haut-niveau-management
                port:
                  number: 8080
          - path: /
            pathType: ImplementationSpecific
            backend:
              service:
                name: poulet-frontend
                port:
                  number: 80
    tls: [ ]
  resources:
    limits:
      cpu: 100m
      memory: 128Mi
    requests:
      cpu: 100m
      memory: 128Mi

#GATEWAY

rabbitmq:
  auth:
    password: password
  resources:
    requests:
      memory: "200Mi"
      cpu: "100m"
    limits:
      memory: "512Mi"
      cpu: "100m"

adapter:
  nabled: true
  image:
    tag: 6ceac3399f0da47234cc3e909abfa0880d8c871c
  resources:
    limits:
      cpu: 100m
      memory: 128Mi
    requests:
      cpu: 100m
      memory: 128Mi
  ingress:
    enabled: true
    className: ""
    annotations: { }
    hosts:
      - host: adapter.al.apoorva64.com
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: poulet-adapter
                port:
                  number: 80

data-manager:
  enabled: true
  image:
    tag: 6ceac3399f0da47234cc3e909abfa0880d8c871c
  resources:
    limits:
      cpu: 100m
      memory: 128Mi
    requests:
      cpu: 100m
      memory: 128Mi
